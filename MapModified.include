InitMapList()
{
	global MapList, ToolTipDuration, EnableMapInfo, EnableMavenInfo, EnableRecipeInfo, EnableDivineVesselInfo
	if MapList <>
		Return
	MapDataFile := "Mapinfo.ini"
	FileRead, MapDataFileContent, %A_ScriptDir%\%MapDataFile%
	MapDataFileContent := SubStr(MapDataFileContent,100)

	Loop, Parse, MapDataFileContent, `r, `n
	{
		if not InStr(A_LoopField, "[")
			Continue
		MapName := Trim(A_LoopField, " `t[]")
		MapList := MapList MapName "|"
	}
	StringTrimRight, MapList, MapList, 1
	IniRead, ToolTipDuration, %A_ScriptDir%\%MapDataFile%, General, ToolTipDuration, 5000
	IniRead, EnableMapInfo, %A_ScriptDir%\%MapDataFile%, General, EnableMapInfo, 
	IniRead, EnableMavenInfo, %A_ScriptDir%\%MapDataFile%, General, EnableMavenInfo, 
	;IniRead, EnableRecipeInfo, %A_ScriptDir%\%MapDataFile%, General, EnableRecipeInfo, 
	EnableRecipeInfo := False
	IniRead, EnableDivineVesselInfo, %A_ScriptDir%\%MapDataFile%, General, EnableDivineVesselInfo, 
}

CheckMapModifier()
{
	global MapInfo, BossInfo, MavenInfo, RecipeInfo, DivineVessel, MapList, ToolTipDuration, EnableMapInfo, EnableMavenInfo, EnableRecipeInfo, EnableDivineVesselInfo
	InitMapList()

	MapText := Clipboard
	If !InStr(MapText, "Map Tier", 1, 30)
	{
		ToolTip, No Map
		return
	}

	if EnableMapInfo
	{
		BossInfo =
		Rarity =
		Loop, Parse, MapText, `r, `n
		{
			if A_Index = 2
			{
				if InStr(A_LoopField,"Rarity")
					Rarity := SubStr(A_LoopField,9)
			}
			else if A_Index > 2
			{
				MapName := A_LoopField
				MapName := StrReplace(MapName, "Superior" A_Space)
				MapName := StrReplace(MapName, "Blighted" A_Space)
				if RegExMatch(MapName, "U).*(" MapList ").*", MapName) > 0
				{
					if (Rarity = "Magic")
					{
						MapNameTemp := SubStr(MapName,InStr(MapName,A_Space))
						if RegExMatch(MapNameTemp, "U).*(" MapList ").*", MapNameTemp) > 0
							MapName := MapNameTemp
					}

					ReadMapData(MapName)
					if BossInfo = ERROR
						BossInfo := ""
					if BossInfo <> 
						Break
				}
			}
		}
	}

	WarningText =
	DamageCounter = 0
;	If InStr(MapText, "Nemesis") && InStr(MapText, "Beyond")
;		WarningText := WarningText "Nemesis & Beyond - Run juiced or sell"
	;DANGEROUS MODS
	If RegExMatch(MapText, "Monsters reflect.*of Elemental Damage")
		WarningText := WarningText "!! Elemental Reflect !!`r"
	If RegExMatch(MapText, "Monsters reflect.*of Physical Damage")
		WarningText := WarningText "!! Physical Reflect !!`r"
	If RegExMatch(MapText, "% maximum Player Resistances")
		WarningText := WarningText "!! Minus Max Resists !!`r"		
	If RegExMatch(MapText, "Cannot Leech from Monsters")
		WarningText := WarningText "!! No leech !!`r"
	If InStr(MapText, "Temporal Chains")
		WarningText := WarningText "!! Temporal Chains !!`r"
	If InStr(MapText, "Players Cannot Regenerate")
		WarningText := WarningText "!! No Regen !!`r"

	;MOD WARNINGS
	If InStr(MapText, "skills chain")
		WarningText := WarningText "! Has Chain (dangerous for summoners)`r"
	If InStr(MapText, "Avoid Elemental Ailments")
		WarningText := WarningText "! Avoid Elemental Ailments`r"
	If InStr(MapText, "Patches of Desecrated Ground")
		WarningText := WarningText "! Desecrated Ground !`r"
	If InStr(MapText, "Elemental Weakness")
		WarningText := WarningText "! Elemental Weakness (-20% Ele Res) !`r"

	If InStr(MapText, "extra Physical Damage as Fire")
		DamageCounter += 1
	If InStr(MapText, "extra Physical Damage as Cold")
		DamageCounter += 1
	If InStr(MapText, "extra Physical Damage as Lightning")
		DamageCounter += 1
	If InStr(MapText, "Monster Critical Strike Multiplier")
		DamageCounter += 1
	If InStr(MapText, "increased Monster Damage")
		DamageCounter += 0.5
	If InStr(MapText, "increased Accuracy Rating")
		DamageCounter += 0.5
	If InStr(MapText, "fire 2 additional projectiles")
		WarningText := WarningText "!! Additional Projectiles !!`r"
	If InStr(MapText, "Increased Monster Attack Speed")
		DamageCounter += 0.7
	If InStr(MapText, "chance to Impale with Attacks")
		DamageCounter += 0.5
	if DamageCounter > 2
		WarningText := WarningText "!! Multi Damage Mods !!`r"

	MouseGetPos, MouseX

	if WarningText <>
		ToolTipText := WarningText
	Else
		ToolTipText := "GO! :-)"

	if EnableMapInfo
	{
		if BossInfo =
		{
			MapInfo = Unknown Map: %MapName%
			BossInfo = ???
			MavenInfo =
			RecipeInfo =
			DivineVessel = 
		}
		ToolTipText := ToolTipText "`r`r" MapName "`rLayout:" A_Tab A_Tab MapInfo "`rBoss: " A_Tab A_Tab BossInfo
		if (MavenInfo <> "" ) and (EnableMavenInfo)
			ToolTipText := ToolTipText "`rMaven: " A_Tab A_Tab MavenInfo
		if (RecipeInfo <> "") and (EnableRecipeInfo)
			ToolTipText := ToolTipText "`rRecipes: " A_Tab A_Tab RecipeInfo
		if (DivineVessel <> "") and (EnableDivineVesselInfo)
			ToolTipText := ToolTipText "`rDivine Vessel: " A_Tab DivineVessel
	}
	ToolTip, %ToolTipText%, % MouseX + 60
	SetTimer, ResetToolTip, -%ToolTipDuration%
}

ReadMapData(MapName)
{
	global MapInfo, BossInfo, MavenInfo, RecipeInfo, DivineVessel, MapTier
	MapDataFile := "Mapinfo.ini"
	IniRead, MapInfo, %A_ScriptDir%\%MapDataFile%, %MapName%, MapInfo, 
	if (MapInfo = "ERROR")
		MapInfo := ""
	IniRead, BossInfo, %A_ScriptDir%\%MapDataFile%, %MapName%, BossInfo, 
	if (BossInfo = "ERROR")
		BossInfo := ""
	IniRead, MavenInfo, %A_ScriptDir%\%MapDataFile%, %MapName%, MavenInfo, 
	if (MavenInfo = "ERROR")
		MavenInfo := ""
	IniRead, RecipeInfo, %A_ScriptDir%\%MapDataFile%, %MapName%, RecipeInfo, 
	if (RecipeInfo = "ERROR")
		RecipeInfo := ""
	IniRead, DivineVessel, %A_ScriptDir%\%MapDataFile%, %MapName%, DivineVessel, 
	if (DivineVessel = "ERROR")
		DivineVessel := ""
	IniRead, MapTier, %A_ScriptDir%\%MapDataFile%, %MapName%, Tier, 
	if (MapTier = "")
		MapTier := "Not in current Atlas"
	else if (MapTier = "ERROR")
		MapTier := ""
}